#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const fs = require('fs')
const path = require('path')
const readline = require('readline')
const os = require('os')

program
  .version(require('../package').version)
  .usage('<commander> [option]')
  .command('test', '部署至测试环境')
  .command('prod', '部署至生产环境')
  .option('-i, --init', '添加配置文件.pubtrc.js')

/**
 * Help.
 */
program.on('--help', () => {
  console.log()
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # 输出部署发布程序到测试或生产环境'))
  console.log('    $ pubt test [option]')
  console.log('    $ pubt prod [option]')
  console.log()
})

program.parse(process.argv)

if (program.init) init()

/**
 * Init.
 */
function init () {
  let dir = path.join(process.cwd(), '.pubtrc.js')
  if (fs.existsSync(dir)) {
    console.log(chalk.yellow('配置文件 .pubtrc.js 已经存在！'))
  } else {
    const confFile = '../.pubtrc.js'
    const fRead = fs.createReadStream(confFile)
    const fWrite = fs.createWriteStream('.pubtrc.js')

    const objReadline = readline.createInterface({
      input: fRead/* ,
      output: fWrite, 
      terminal: true */
    })
    objReadline.on('line', (line) => {
      fWrite.write(line + os.EOL)
    })
    // console.log(conf)
    objReadline.on('close', () => {
      console.log(chalk.green('成功添加配置文件 .pubtrc.js '))
    })
  }
}
